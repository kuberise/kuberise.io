# SA for frontend secrets
apiVersion: v1
kind: ServiceAccount
metadata:
  name: frontend-vault-sa
  namespace: frontend
---
# Vault auth for frontend secrets
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultAuth
metadata:
  name: frontend-vault-auth
  namespace: frontend
spec:
  allowedNamespaces:
  - frontend
  kubernetes:
    role: frontend-vault-reader
    serviceAccount: frontend-vault-sa
    tokenExpirationSeconds: 600
  method: kubernetes
  mount: kubernetes
  namespace: frontend
---
apiVersion: secrets.hashicorp.com/v1beta1
kind: VaultStaticSecret
metadata:
  name: frontend-creds
  namespace: frontend
spec:
  type: kv-v2                               # Specify KV store version
  mount: secret                             # KV secrets engine mount path
  path: applications/frontend/frontend-creds # Path where the secret is stored
  vaultAuthRef: frontend-vault-auth         # Reference to the VaultAuth CR
  refreshAfter: 2h
  destination:
    name: frontend-creds                    # Name of the K8s Secret to create
    create: true                            # Create the Secret if it doesn't exist
    type: Opaque                            # Secret type (Opaque is default)
---
# # Create policy and role for frontend in Vault pod:


# # Enable Kubernetes auth if not already enabled
# vault auth enable kubernetes
# vault write auth/kubernetes/config kubernetes_host="https://kubernetes.default.svc.cluster.local:443"

# # Create policy to all secrets in /applications/frontend/* path
# vault policy write frontend-read - <<EOF
# path "secret/data/applications/frontend/*" {
#   capabilities = ["read"]
# }
# EOF

# # Create the role for the Vault Secrets Operator
# vault write auth/kubernetes/role/frontend-vault-reader \
#     bound_service_account_names=frontend-vault-sa \
#     bound_service_account_namespaces=frontend \
#     policies=frontend-read \
#     ttl=1h
